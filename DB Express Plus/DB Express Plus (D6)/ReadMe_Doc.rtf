{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f30\froman\fcharset238\fprq2 Times New Roman CE;}{\f31\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f33\froman\fcharset161\fprq2 Times New Roman Greek;}{\f34\froman\fcharset162\fprq2 Times New Roman Tur;}{\f35\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f36\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f37\froman\fcharset186\fprq2 Times New Roman Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 heading 2;}{\s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs36\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive 
Default Paragraph Font;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body Text;}}{\info
{\title property CurrentSQL: String read FCurrentSQL;}{\author Authorized User}{\operator Authorized User}{\creatim\yr2001\mo5\dy11\hr21\min51}{\revtim\yr2001\mo5\dy18\hr17\min38}{\printim\yr2001\mo5\dy18\hr16\min26}{\version51}{\edmins788}{\nofpages7}
{\nofwords2049}{\nofchars11681}{\*\company Business Software Systems Inc}{\nofcharsws0}{\vern8247}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800
\dgvorigin1440\dghshow1\dgvshow1\jexpand\viewkind1\viewscale150\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32 Installation Instructions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par Create a directory  ..\\Delphi6\\Source\\dbExpressPlus.
\par Copy all source files to the new directory.
\par Open dbExprPlus_r.dpk and compile.
\par Open dbExprPlus_d.dpk, compile, and install.
\par Go To \'93Tools|Environment Options\'94 menu item and open the Environment page.
\par Go To the Library tab, Library Path setting and add
\par $(DELPHI)\\Source\\dbExpressPlus
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs36\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Overview dbExpress Plus
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par dbExpress Plus is an extension of the standard dbExpress components shipped with Delphi 6 and Kylix.  When migrating from BD
E database access components, you may find several important pieces missing to make a smooth migration.  The two components obviously missing are TSession and TBatchMove. The session component has multiple methods for retrieving metadata information.  Thi
s
 capability is available in dbExpress, but buried in complex methods and algorithms.  TSQLMetaData encapsulates this capability into easy to use methods.  TBatchMove real capabilities are housed inside the BDE.  TSQLDataPump replaces the TBatchMove and ad
d
s ASCII capability.  The ASCII feature is not active in this build.  Also included is a new component essential to SQL programming, TSQLScript.  This component executes one or more SQL statements and procedures.  This component is ideal for non-SQL select
 statements and metadata statements.
\par 
\par The dbExpress Plus suite is currently being released as freeware.  It will shortly be released under an open source license (must likely the Netscape Open Source License).  BSS will be encouraging other programmers to improve the suite.  
\par 
\par For more information on participating in the programming of dbExpress Plus please contact Thomas Miller }{\field{\*\fldinst { HYPERLINK "mailto:tmiller@bss-software.com" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001900000074006d0069006c006c006500720040006200730073002d0073006f006600740077006100720065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b400000006d00610069006c0074006f003a0074006d0069006c006c0065007200
40006200730073002d0073006f006600740077006100720065002e0063006f006d00000000000000}}}{\fldrslt {\cs15\ul\cf2 tmiller@bss-software.com}}}{ .  For the most resent updates to the suite including bug fixes, enhancements, documentation, and demo programs, go to 
}{\field{\*\fldinst { HYPERLINK "http://www.bss-software.com" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000017000000150000007700770077002e006200730073002d0073006f006600740077006100720065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b3a00000068007400740070003a002f002f007700770077002e006200730073002d0073006f006600
740077006100720065002e0063006f006d002f00000000000000}}}{\fldrslt {\cs15\ul\cf2 www.bss-software.com}}}{. 
\par 
\par }{\b\i Note:  }{Runtime only properties are signified by an asterisk.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs36\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {SQLScript
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Overview
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {SQLScript runs script made up of multiple S
QL statements.  It is useful in executing metadata statements that may include colons (:) and/or semi-colons (;).  These can often confuse regular components.
\par  
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Properties
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b About: String}{ \endash  Version of the software.  This property will be updated to display a
 dialog box with contributor and update information.
\par }{\b CommitEach: Boolean}{ \endash  Uses the transaction object assigned to the property TransDesc to start a transaction and then executes a commit for each SQL statement in the script.
\par }{\b CurrentSQL*: String}{ \endash  The current SQL statement being executed.
\par }{\b Debug: Boolean}{ \endash  When True, each SQL statement is displayed before it is executed.    }{\b Name: String}{ \endash  The name of the component.
\par }{\b RecordsAffected *: LongWord}{ \endash  The total number of records effected.
\par }{\b SQLProc: Boolean}{ - Default is False.  When true, the SQL statement is processed as one SQL statement.  In this mode, colons and semi-colons are ignored and assumed to be part of the whole.
\par }{\b SQLConnection: TSQLConnection}{ - Use SQLConnection to specify an SQL connection object that connects the dataset to a database server.
\par }{\b SQL: TStrings}{ - Use the properties and methods of SQL to specify the SQL Script or other valid SQL statement.
\par }{\b Tag: LongInt}{ - Tag has no predefined meaning. The Tag property is provided for the convenience of develop
ers. It can be used for storing an additional integer value or it can be typecast to any 32-bit value such as a component reference or a pointer.
\par }{\b TransDesc *: TTransactionDesc}{ -  Assign a valid transaction description at runtime to be used by the component.  This is required for CommitEach to function.
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Methods
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b ExecuteDirect: LongWord}{ \endash 
 Call ExecuteDirect to execute the script in the SQL property.  Returns the number of records affected.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs36\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {SQLMetaData
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Overview
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {SQLMetaData gives you quick and easy access to metadata information. 
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Properties
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b About: String}{ \endash 
 Version of the software.  This property will be updated to display a dialog box with contributor and update information.
\par }{\b MetaDataFilter: String}{ \endash  Is an SQL pattern mask that filters the resulting metadata object names.
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Methods
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b GetTableNames(AList: TStrings)}{ \endash 
 Populates a TStrings compatible object with a list of Table names visible to the user logged in.
\par }{\b GetSysTableNames(AList: TStrings)}{ \endash  Populates a TStrings compatible object with a list of System Table names visible to the user logged in.
\par }{\b GetViewNames(AList: TStrings)}{ \endash  Populates a TStrings compatible object with a list of View names visible to the user logged in.
\par }{\b GetSynonymNames(AList: TStrings)}{ \endash  Populates a TStrings compatible object with a list of Synonym names visible to the user logged in.
\par }{\b GetFieldNames(const ATableName: string; AList: TStrings; ASortOrder: TMetaDataSortOrder = soPosition)}{ \endash  Populates a TStrings compatible object with a list of field names visible to the user logged in. The list is 
sorted either by name or by column position within the database object (soName, soPosition).  The default is by column position. 
\par 
\par }{\b GetFieldMetaData(const ATableName, AColumnName: string): TFieldMetaData}{ \endash  Populates the following record structure with the appropriate information for the Table and Column given.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {TFieldMetaData = record
\par     ColumnName: string;
\par     ColumnPosition: LongInt;
\par     ColumnDataType: LongInt;
\par     ColumnTypeName: string;
\par     ColumnSubtype: LongInt;
\par     ColumnLength: LongInt;
\par     ColumnPrecision: LongInt;
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 { \tab    ColumnScale: LongInt;
\par  \tab    ColumnNullable: LongInt;  // 1=Not Nullable, 0=Nullable
\par   \tab end;
\par 
\par }{\b GetTableMetaData(const ATableName: string; AFieldIndex: Integer): TFieldMetaData }{- Populates the following record structure with the appropriate information for the Table and Column Index given.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {TFieldMetaData = record
\par     ColumnName: string;
\par     ColumnPosition: LongInt;
\par     ColumnDataType: LongInt;
\par     ColumnTypeName: string;
\par     ColumnSubtype: LongInt;
\par     ColumnLength: LongInt;
\par     ColumnPrecision: LongInt;
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 { \tab    ColumnScale: LongInt;
\par  \tab    ColumnNullable: LongInt;  // 1=Not Nullable, 0=Nullable
\par   \tab end;
\par 
\par }{\b GetPrimaryKeyFieldNames(const ATableName: string; AList: TStrings)}{ \endash  Populates a TStrings compatible object with a list of Column names comprising the key of the Table given. 
\par }{\b GetPrimaryKeyFields(const ATableName: string): string}{ \endash  Returns a string with a list of Column names comprising the key of the Table given.  A semicolon separates the column names.
\par }{\b GetIndexNames(const ATableName: string; AList: TStrings)}{ \endash  Populates a TStrings compatible object with a list of Index names related to the Table given.
\par }{\b GetIndexFieldNames(const ATableName, AIndexName: string; AList: TStrings) }{\endash  Populates a TStrings compatible object with a list of Column names comprising the key of the Table and Index name given. 
\par 
\par }{\b GetIndexFields(const ATableName, AIndexName: string): string }{\endash  Returns a string with a list of Column names comprising the Index given.  A semicolon separates the column names. 
\par }{\b GetInsertStatement(const ATableName: string; ASQL: TStrings): Integer}{ \endash 
 Populates a TStrings compatible object with an SQL insert statement for the Table given.  It also returns the index of the first line that will need to be set with an actual value.  For instance, if the ta
ble has 3 columns, then the return value would be 5.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {INSERT INTO
\par mytable
\par (column_1,
\par column_2,
\par column_3) VALUES
\par value_for_column_1,     // Index 5
\par value_for_column_2,
\par value_for_column_3)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 { 
\par }{\b GetUpdateStatement(const ATableName: string; ASQL: TStrings): Integer}{ \endash 
 Populates a TStrings compatible object with an SQL update statement for the Table given.  It also returns the index of the first line that will need to be set with an actual value.  For instance, if the table has 3 columns, then the return value would
 be 3.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {UPDATE
\par mytable
\par SET
\par column_1 = new_value,     // Index 3
\par column_2 = new_value,
\par column_3 = new_value
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }{\b GetSelectStatement(const ATableName: string; ASQL: TStrings): Integer }{\endash  Populates a TStrings compatible object with an SQL select statement for the 
Table given.  It also returns the index of the line that contains the table name.  For instance, if the table has 3 columns, then the return value would be 5.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {SELECT
\par column_1,
\par column_2,
\par column_3
\par FROM
\par Mytable     //  Index 5
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs36\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {SQLDataPump
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Overview
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Move dat
a from one table to another table, from an ASCII file to a table, and from a table to an ASCII file. Only Table to Table data pumping is supported in this release. 
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Properties
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }{\b AbortOnException: Boolean}{ \endash  When true, on an exception, the system halts.  Whe
n false, the system ignores the error and continues on with the data pumping.  If ExceptionFileAction is set to efaCreate or efaAppend, an entry will be made into the log file specified in the ExceptionFile property.
\par }{\b About: String}{ \endash  Version of the software.  This property will be updated to display a dialog box with contributor and update information.
\par }{\b ClearDestination: Boolean}{ \endash  When true, the destination table where be cleared of all records.  If ConfirmClear is set to true, the user will be prompted to clear the table, not clear the table, or abort. 
\par }{\b CommitCount: LongInt}{ \endash  Default is one.  This will commit each record as it is pumped.  When less then one, all records are commited in one transaction.  When set to other positive numbers, the systems commits 
in batches of that count. If set to 25, the system will commit records in batches of 25.  If ExceptionFileAction is not in \'93None\'94
 mode, then the CommitCount must be equal to one.  If not, the system will not be able to tell which record caused the exception.
\par }{\b ConfirmClear: Boolean}{ \endash  When ClearDestination is set to true and ComfirmClear is set to true, the user will be prompted to clear the table, not clear the table, or abort. 
\par }{\b DestinationDateTimeFormat: String}{ \endash  A custom DateTime format for moving date data type values.  This system is already coded for standard dbExpress supported databases.
\par }{\b DestinationFields: TDestinationFields}{ \endash  The DestinationFields property is where you declare the destination fields and tell the system how to pump data into each indivi
dual field.  There are three options:  From another datasource (a source column), a literal value, or by assigning the value dynamically through the OnBeforeFieldPump event.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b FieldName: String}{ \endash  The destination field name.
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\b SourceColumn: String}{ \endash  The source column name.  The value is taken from here when the SourceValueType is set to fvtColumn.
\par }{\b SourceLiteral: String}{ \endash  A literal value.  The value is taken from here when the SourceValueType is set to fvtLiteral.
\par }{\b SourceValueType: TFieldValueType}{ \endash  Options are fvtColumn and fvtLiteral.  Values assigned in OnBeforeFieldPump take precidents over both design time value types.
\par 
\par }{\b OnBeforeFieldPump \endash }{ Set the destination value before an insert or update statement is executed.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {    
\par }{\b DestinationTable: String}{ \endash  The table where the data is being pumped. 
\par }{\b DataMoveMode: TDataMoveMode}{ \endash  There are three option: sdpTableToTable, sdpTableToAscii, and sdpAsciiToTable.   Table to Table mode is the only one working in this version.
\par }{\b ExceptionFileAction: TExceptionFileAction}{ \endash  There are 
three options:  efaCreate, efaAppend, and efaNone.  Create mode creates a new log file.  Append mode appends new log information to an existing file, or creates a new one if the file doesn\rquote 
t already exist.  In None mode, exception information is not sent to a file.   
\par }{\b ExceptionFileName: String}{ \endash  The name of the file exceptions will be written to. 
\par }{\b InsertCount: LongInt *}{ \endash  The number of records inserted into the destination table or an ASCII file.  
\par }{\b ReadCount: LongInt *}{ \endash  The number of records read from the source table or source ASCII file.
\par }{\b ShowRunningStatistics: TDataMoveStatistic}{ \endash  A \'93Running Statistics\'94 panel can be shown during the pumping process to provide visual feedback to the user.  Options are: dmsReadWrite, dmsReadUpdateInsert, and dmsNone.  When 
in Read/Write mode, the system shows the progress of the number of records read from the source and the number or records either inserted or updated for the destination.  Read/Update/Insert mode shows the records Read, Updated, and Inserted separately.  I
n None mode, a Running Statistics panel is not displayed. 
\par }{\b ShowSummaryStatistic: TDataMoveStatistic}{ \endash  A summary statistics dialog box can be displayed at the completion of pumping. When in Read/Write mode, the system shows the total of the number of records
 read from the source and the number or records either inserted or updated for the destination.  Read/Update/Insert mode shows the records Read, Updated, and Inserted separately.  In None mode, a summary statistics dialog box is not displayed.  
\par }{\b SQLDataPumpMode: TSQLDataPumpMode}{ \endash 
 The mode in which the component operates.  Options are: dmAlwaysInsert, dmAppend, dmUpdate, dmAppendUpdate, and dmDelete.  Always Insert mode always inserts each record.  This eliminates the time it takes to check if the record al
ready exists to possibly perform an update instead of an insert.  This is most often used on empty tables or new ASCII files.  Append mode adds the record to the table or ASCII file.  Update mode, only updates existing records.  New records are discarded.
 
 Update mode does not work in DataMoveMode TableToAscii.  Append and Update mode updates existing records and inserts new records.  This mode is unavailable for TableToAscii DataMoveMode.  Delete mode removes records from the destination table that exist 
in the source table.  This mode is not available for TableToAscii DataMoveMode.
\par }{\b SQLMetaDataDestination: TSQLMetaData}{ \endash  An SQLMetaData component. }{\b SQLMetaDataSource: TSQLMetaData}{ \endash  An SQLMetaData component. 
\par }{\b SQLSource: TStrings:}{  A valid SQL statement.  When DataMoveMode is either sdpTableToTable or sdpTableToAscii, this statement is the source of data for the destination object (either Table or ASCII).
\par }{\b StatisticsCaption: String}{ \endash  The caption of the Summary Statistics Dialog Box. 
\par }{\b StatisticsInterval: LongInt}{ \endash  The frequency in which the Running Statistics panel should be updated.
\par }{\b UpdateCount: LongInt *}{ \endash  The number of records updated in the destination table.  Records can\rquote t be updated in ASCII file.    
\par }{\b UseTransaction: Boolean}{ \endash  The default is True.  
\par }{\b WriteCount: LongInt *}{ \endash  The number of records inserted and updated in the destination table or inserted into an ASCII file.  
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Methods
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }{\b SetDataPumpTable(TableName: String)}{ \endash  This prepares the Destination table, Destination Fields, and SQL Source for the pumping process.  This should only be used on tables that match exactly.
\par }{\b GetCurrentSQLStatement: String}{ \endash  Only available when pumping process is terminated by an exception.  Returns the last failed SQL statement.  This accommodates external reporting of a failed SQL statement.  
\par }{\b GetSourceQuery: TSQLQuery}{ \endash  Returns the DataSet object used by the source SQL statement.
\par }{\b Execute: LongInt}{ \endash  Starts the pumping process and returns the total number of records moved.
\par }}