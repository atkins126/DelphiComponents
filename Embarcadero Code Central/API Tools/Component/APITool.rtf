{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f47\froman\fcharset238\fprq2 Times New Roman CE;}{\f48\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f50\froman\fcharset161\fprq2 Times New Roman Greek;}{\f51\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f52\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f53\fswiss\fcharset238\fprq2 Arial CE;}{\f54\fswiss\fcharset204\fprq2 Arial Cyr;}{\f56\fswiss\fcharset161\fprq2 Arial Greek;}{\f57\fswiss\fcharset162\fprq2 Arial Tur;}
{\f58\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;
\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid \snext0 Normal;}{
\s1\keepn\nowidctlpar\widctlpar\adjustright \fs28\lang3081\cgrid \sbasedon0 \snext0 heading 1;}{\s2\keepn\nowidctlpar\widctlpar\adjustright \fs20\ul\lang3081\cgrid \sbasedon0 \snext0 heading 2;}{\s3\keepn\nowidctlpar\widctlpar\adjustright 
\b\f1\fs18\lang3081\cgrid \sbasedon0 \snext0 heading 3;}{\s4\keepn\nowidctlpar\widctlpar\adjustright \b\f1\fs18\cf6\lang3081\cgrid \sbasedon0 \snext0 heading 4;}{\s5\keepn\nowidctlpar\widctlpar\adjustright \b\f1\fs18\ulw\lang3081\cgrid \sbasedon0 \snext0 
heading 5;}{\s6\li142\keepn\nowidctlpar\widctlpar\adjustright \b\f1\fs18\ulw\lang3081\cgrid \sbasedon0 \snext0 heading 6;}{\s7\li142\keepn\nowidctlpar\widctlpar\adjustright \b\f1\fs18\uldb\lang3081\cgrid \sbasedon0 \snext0 heading 7;}{
\s8\keepn\nowidctlpar\widctlpar\adjustright \b\i\f1\fs18\lang3081\cgrid \sbasedon0 \snext0 heading 8;}{\s9\keep\keepn\nowidctlpar\adjustright \f1\fs20\ulw\lang3081\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid \sbasedon0 \snext15 footnote text;}{\*\cs16 \additive \super \sbasedon10 footnote reference;}{\*\cs17 \additive \v\f1\fs18\ulnone\cf1 \sbasedon10 Hidden;}{\*\cs18 \additive \b\f1\uldb\cf11 
\sbasedon10 Normal10G;}{\*\cs19 \additive \b\v\f1\fs20\uldb\cf11 \sbasedon18 Hidden10G;}}{\info{\title TDBToolBox}{\author Ural Gunaydin}{\operator Ural Gunaydin}{\creatim\yr2002\mo10\dy22\hr12\min59}{\revtim\yr2003\mo1\dy2\hr1\min43}{\version220}
{\edmins462}{\nofpages10}{\nofwords950}{\nofchars5416}{\*\company mcTech}{\nofcharsws6651}{\vern71}}\paperw11906\paperh16838\margl567\margr567\margt567\margb567 \widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot 
\fet0\sectd \psz9\linex0\headery397\footery397\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\s1\keep\keepn\nowidctlpar\outlinelevel0\adjustright \fs28\lang3081\cgrid {\cs16\b\f1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ APITools Component}}#{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ idAPITools}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super K}{ APITools Component}}B{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super B}{ class_TAPITools}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 001}}}{\f1\fs20 \{bmc APITool.shg\} }{\b\f1 
APITools Component
\par }\pard\plain \s9\keep\keepn\nowidctlpar\outlinelevel8\adjustright \f1\fs20\ulw\lang3081\cgrid {\cf11 Methods}{\cs17\v\ulnone\cf1 %idMethods}{\cf11 \tab Properties}{\cs17\v\ulnone\cf1 %idProperties}{\cf11 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\f1\cf11 
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\f1\cf1 Unit
\par }{\b\f1\cf11 APITool
\par }{\f1\uldb\cf1 
\par }{\f1\cf1 Constants
\par }\pard \s15\li142\nowidctlpar\widctlpar\adjustright {\f1\ulw\cf1 DivKByte}{\cs17\v\f1\cf1 _idDividers}{\f1\ulw\cf1 
\par DivMByte}{\cs17\v\f1\cf1 _idDividers}{\f1\ulw\cf1 
\par DivGByte}{\cs17\v\f1\cf1 _idDividers}{\f1\cf1 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\b\f1\cf1 
\par }{\f1\cf1 Type Declarations
\par }\pard \s15\li142\nowidctlpar\widctlpar\adjustright {\f1\ul TAPIException}{\v\f1\ul _idTAPIException}{\f1\ul 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\f1 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\f1 \page 
\par }\pard\plain \s3\nowidctlpar\widctlpar\outlinelevel2\adjustright \b\f1\fs18\lang3081\cgrid {\cs16\fs20\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ Dividers}}#{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ _idDividers}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 002}}}{\fs20 DivKByte}{\b0\fs20 = $400;\tab (1024)
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\b\f1 DivMByte}{\f1 = $100000;\tab (1024*1024)
\par }{\b\f1 DivGByte}{\f1 = $40000000;\tab (1024*1024*1024)
\par Predefined constants to divide values and shows in KB, MB and GB respectively.
\par 
\par }\pard\plain \s8\nowidctlpar\widctlpar\outlinelevel7\adjustright \b\i\f1\fs18\lang3081\cgrid {\fs20 Example
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\f1 :
\par :
\par lbSize. Caption: = \tab Format ('%12.0n   %12.0n KB   %10.2n MB   %8.2n GB',
\par }\pard \fi720\li720\nowidctlpar\widctlpar\adjustright {\f1 [dskSize, dskSize / }{\b\f1 DivKByte}{\f1 , dskSize / }{\b\f1 DivMByte}{\f1 , dskSize / }{\b\f1 DivGByte}{\f1 ]);
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1 :
\par :
\par 
\par \page 
\par }{\cs16\f1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ TAPIException}}#{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ _idTAPIException}}+
{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 003}}}{\b\f1 TAPIException
\par }{\f1 Exception handling routine. Used internally to raise }{\b\f1 TAPITools}{\f1  exceptions.
\par 
\par }\pard\plain \s8\nowidctlpar\widctlpar\outlinelevel7\adjustright \b\i\f1\fs18\lang3081\cgrid {\fs20 Example
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\f1 :
\par :
\par result:= fMemoryStatus.dwLength;
\par }{\b\f1 if }{\f1 result > 0 }{\b\f1 then}{\f1 
\par }{\b\f1 begin
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\f1 GlobalMemoryStatus (TMemoryStatus (fMemoryStatus));
\par }{\b\f1 case}{\f1  Index }{\b\f1 of}{\f1 
\par }\pard \li284\nowidctlpar\widctlpar\adjustright {\f1 0: result: = fMemoryStatus.dwAvailPageFile;
\par 1: result: = fMemoryStatus.dwTotalPageFile;
\par 2: result: = fMemoryStatus.dwTotalPageFile - fMemoryStatus.dwAvailPageFile;
\par 3: result: = fMemoryStatus.dwAvailPhys;
\par 4: result: = fMemoryStatus.dwTotalPhys;
\par 5: result: = fMemoryStatus.dwTotalPhys - fMemoryStatus.dwAvailPhys;
\par 6: result: = fMemoryStatus.dwAvailVirtual;
\par 7: result: = fMemoryStatus.dwTotalVirtual;
\par 8: result: = fMemoryStatus.dwTotalVirtual - fMemoryStatus.dwAvailVirtual;
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\b\f1 end}{\f1 ;
\par }\pard \nowidctlpar\widctlpar\adjustright {\b\f1 end else
\par raise}{\f1  }{\b\f1 TAPIException}{\f1 .Create ('GetMemoryStatus FAILED');
\par :
\par :
\par 
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\f1 \page }{\cs16\b\f1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ APITools Methods}}#{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ idMethods}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 004}}}{\b\f1\fs24 Methods
\par }{\b\f1\uldb\cf11 ExecuteFile}{\cs17\b\v\f1\cf11 %idExecuteFile}{\b\f1\uldb\cf11 
\par FileCopy}{\cs17\b\v\f1\cf11 %idFileCopy}{\b\f1\uldb\cf11 
\par FileMove}{\cs17\b\v\f1\cf11 %idFileMove}{\b\f1\ulw\cf11 
\par }{\b\f1\uldb\cf11 GetErrorMsg}{\cs17\b\v\f1\cf11 %idGetErrorMsg}{\b\f1\ulw\cf11 
\par }{\b\f1\uldb\cf11 GetDiskCapacity}{\cs17\b\v\f1\cf11 %idGetDiskCapacity}{\b\f1\ulw\cf11 
\par }{\b\f1\uldb\cf11 LocaleInfo}{\cs17\b\v\f1\cf11 %idLocaleInfo}{\b\f1\ulw\cf11 
\par }{\b\f1\uldb\cf11 GetVolumeInfo}{\cs17\b\v\f1\cf11 %idGetVolumeInfo}{\b\f1\ulw\cf11 
\par }\pard\plain \keep\keepn\nowidctlpar\adjustright \fs20\lang3081\cgrid {\b\f1\cf11 \page }{\cs16\b\f1\cf1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ ExecuteFile function}}#{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ idExecuteFile}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super K}{ Methods;Methods,ExecuteFile}}B{\footnote 
\pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super B}{ ed_ExecuteFile}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 005}}}{\b\f1\fs28\cf1 ExecuteFile
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 The }{\b\f1\cf1 ExecuteFile}{\f1\cf1  function opens or prints a specified file. The file can be an executable file or a document file.
\par }{\b\i\f1\cf1 
\par Declaration}{\b\i\f1\cf11 
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\b\f1\cf1 function }{\f1\cf1 ExecuteFile (}{\b\f1\cf1 const }{\i\f1\cf1 Action, FileName, Params, DefaultDir}{\f1\cf1 : }{\b\f1\cf1 string}{\f1\cf1 ; }{\i\f1\cf1 ShowCmd}{\f1\cf1 : Integer): THandle;
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }{\b\i\f1\cf1 Parameters
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 Action}{\f1\cf1 \tab \tab A string that specifies the action to perform.
\par }\pard \li284\nowidctlpar\widctlpar\adjustright {\f1\cf1 Possible values are
\par \lquote open\rquote \tab The function opens the file specified by }{\i\f1\cf1 FileName}{\f1\cf1 . The file can be an executable file or a document file.
\par }\pard \fi720\li720\nowidctlpar\widctlpar\adjustright {\f1\cf1 The file can be a folder to open.
\par }\pard \li284\nowidctlpar\widctlpar\adjustright {\f1\cf1 \lquote print\rquote \tab The function prints the file specified by }{\i\f1\cf1 FileName}{\f1\cf1 . The file should be a document file.
\par }\pard \fi436\li1004\nowidctlpar\widctlpar\adjustright {\f1\cf1 If the file is an executable file, the function opens the file, as if "open" had been specified.
\par }\pard \li284\nowidctlpar\widctlpar\adjustright {\f1\cf1 \lquote explore\rquote \tab The function explores the folder specified by }{\i\f1\cf1 FileName}{\f1\cf1 . The Action parameter can be empty.
\par }\pard \fi436\li1004\nowidctlpar\widctlpar\adjustright {\f1\cf1 In that case, the function opens the file specified by }{\i\f1\cf1 FileName}{\f1\cf1 .
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 FileName}{\f1\cf1 \tab A string that specifies the file to open or print or the folder to open or explore.
\par }\pard \fi578\li862\nowidctlpar\widctlpar\adjustright {\f1\cf1 The function can open an executable file or a document file. The function can print a document file.
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 Params}{\f1\cf1 \tab If }{\i\f1\cf1 FileName}{\f1\cf1  specifies an executable file, }{\i\f1\cf1 Params}{\f1\cf1  is a string that specifies parameters
\par }\pard \fi578\li862\nowidctlpar\widctlpar\adjustright {\f1\cf1 to be passed to the application. If }{\i\f1\cf1 FileName}{\f1\cf1  specifies a document file, }{\i\f1\cf1 Params}{\f1\cf1  should be empty.
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 DefaultDir}{\f1\cf1 \tab A string that specifies the default directory. Can be empty string.
\par }{\i\f1\cf1 ShowCmd}{\f1\cf1 \tab If }{\i\f1\cf1 FileName}{\f1\cf1  specifies an executable file, }{\i\f1\cf1 ShowCmd}{\f1\cf1  specifies how the application
\par }\pard \fi578\li862\nowidctlpar\widctlpar\adjustright {\f1\cf1 is to be shown when it is opened. This parameter can be one of the following values:
\par }{\b\f1\cf1 Value\tab \tab \tab Meaning
\par }{\f1\cf1 SW_HIDE\tab \tab Hides the window and activates another window.
\par SW_MAXIMIZE\tab \tab Maximises the specified window.
\par SW_MINIMIZE\tab \tab Minimises the specified window.
\par SW_RESTORE\tab \tab Activates and displays the window.
\par SW_SHOW\tab \tab Activates the window and displays it in its current size and position. 
\par }\pard \fi578\li3022\nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }\pard \fi578\li862\nowidctlpar\widctlpar\adjustright {\f1\cf1 If }{\i\f1\cf1 FileName}{\f1\cf1  specifies a document file, }{\i\f1\cf1 ShowCmd}{\f1\cf1  should be zero.
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par If the function succeeds, the return value is the handle of the application that was run, or the handle of a dynamic data exchange (DDE) server application.
\par If the function fails, the return value is an error value that is less than or equal to 32.
\par 
\par }{\b\i\f1\cf1 Example
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\f1\cf1 ExecuteFile(\lquote open\rquote , file_to_run, \rquote \rquote , \rquote \rquote , SW_SHOW);
\par ExecuteFile (\lquote print\rquote , doc_to_print, \rquote \rquote , \rquote \rquote , 0);
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }\pard \keep\keepn\nowidctlpar\adjustright {\f1\cf1 \page }{\cs16\f1\cf1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ FileCopy function}}#{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ idFileCopy}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super K}{ Methods;Methods,FileCopy}}B{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super B}{ ed_FileCopy}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 006}}}{\b\f1\fs28\cf1 FileCopy
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 The }{\b\f1\cf1 FileCopy }{\f1\cf1 function copies an existing file to a new file.
\par 
\par }{\b\i\f1\cf1 Declaration}{\b\i\f1\cf11 
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\b\f1\cf1 function }{\f1\cf1 FileCopy (}{\b\f1\cf1 const }{\i\f1\cf1 Src, Dest}{\f1\cf1 : }{\b\f1\cf1 string}{\f1\cf1 ; }{\i\f1\cf1 Overwrite}{\f1\cf1 : BOOL): BOOL;
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }{\b\i\f1\cf1 Parameters
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 Src}{\f1\cf1 \tab \tab A string that specifies the name of an existing file. 
\par }{\i\f1\cf1 Dest}{\f1\cf1 \tab \tab A string that specifies the name of the new file. 
\par }{\i\f1\cf1 Overwrite}{\f1\cf1 \tab Specifies how this operation is to proceed if a file of the same name as that specified by }{\i\f1\cf1 Src}{\f1\cf1 
\par }\pard \fi578\li862\nowidctlpar\widctlpar\adjustright {\f1\cf1 already exists. If this parameter is TRUE and the new file already exists, the function fails.
\par If this parameter is FALSE and the new file already exists, the function overwrites the
\par existing file and succeeds. 
\par 
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 If the function succeeds, the return value is non-zero, otherwise, the return value is zero.
\par 
\par }{\b\i\f1\cf1 Example
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\f1\cf1 FileCopy (Src_File, Dest_File, TRUE);\tab \tab // fails, if Dest_File exist.
\par FileCopy (Src_File, Dest_File, FALSE);\tab // overwrite, if Dest_File exist.
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }\pard \keep\keepn\nowidctlpar\adjustright {\f1\cf1 \page }{\cs16\f1\cf1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ FileMove function}}#{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ idFileMove}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super K}{ Methods;Methods,FileMove}}B{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super B}{ ed_FileMove}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 007}}}{\b\f1\fs28\cf1 FileMove
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 The }{\b\f1\cf1 FileMove}{\f1\cf1  function renames an existing file or a directory (including all its children).
\par }{\b\i\f1\cf1 
\par Declaration}{\b\i\f1\cf11 
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\b\f1\cf1 function }{\f1\cf1 FileMove (}{\b\f1\cf1 const }{\i\f1\cf1 Src, Dest}{\f1\cf1 : }{\b\f1\cf1 string}{\f1\cf1 ): BOOL;
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }{\b\i\f1\cf1 Parameters
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 Src}{\f1\cf1 \tab A string that names an existing file or directory. 
\par }{\i\f1\cf1 Dest}{\f1\cf1 \tab A string that specifies the new name of a file or directory. The new name must not already exist.
\par }\pard \fi578\li142\nowidctlpar\widctlpar\adjustright {\f1\cf1 A new file may be on a different file system or drive. A new directory must be on the same drive.
\par 
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 If the function succeeds, the return value is non-zero, otherwise, the return value is zero.
\par 
\par }{\b\i\f1\cf1 Example
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\f1\cf1 FileMove (\lquote OldFile.txt\rquote , \rquote NewFile.txt\rquote );\tab \tab // succeed and OldFile.txt renamed as NewFile.txt
\par FileMove (\lquote My Documents\rquote , \rquote My Folders\rquote );\tab // succeed and My Documents folder renamed as My Folders
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }\pard \keep\keepn\nowidctlpar\adjustright {\f1\cf1 \page }{\cs16\f1\cf1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ GetErrorMsg function}}#{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{ idGetErrorMsg}}K{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super K}{ Methods;Methods,GetErrorMsg}}B{\footnote \pard\plain 
\s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super B}{ ed_GetErrorMsg}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 008}}}{\b\f1\fs28\cf1 GetErrorMsg
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 The }{\b\f1\cf1 GetErrorMsg}{\f1\cf1  returns string representation of an error code.
\par }{\b\i\f1\cf1 
\par Declaration}{\b\i\f1\cf11 
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\b\f1\cf1 function }{\f1\cf1 GetErrorMsg (}{\b\f1\cf1 const }{\i\f1\cf1 ErrCode}{\f1\cf1 : integer): }{\b\f1\cf1 string}{\f1\cf1 ;
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }{\b\i\f1\cf1 Parameters
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\i\f1\cf1 ErrCode}{\f1\cf1 \tab Error code
\par }\pard \fi578\li142\nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 If the function succeeds, the return value is string representation of }{\i\f1\cf1 ErrCode}{\f1\cf1 ,
\par otherwise, the return value is empty string.
\par 
\par }{\b\i\f1\cf1 Example
\par }\pard \li142\nowidctlpar\widctlpar\adjustright {\f1\cf1 Check }{\b\f1\cf1 TAPITools }{\f1\cf1 source codes how to use this function.
\par }\pard \nowidctlpar\widctlpar\adjustright {\f1\cf1 
\par \page }{\cs16\b\f1\cf1\super ${\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super $}{ APITools Properties}}#{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super #}{
 idProperties}}+{\footnote \pard\plain \s15\nowidctlpar\widctlpar\adjustright \fs20\lang3081\cgrid {\cs16\super +}{ 012}}}{\b\f1\fs24\cf1 Properties
\par }{\i\f1\cf1 Disk drive properties
\par }{\b\f1\uldb\cf11 DrivesAll}{\b\v\f1\uldb\cf11 %idDrivesAll}{\b\f1\cf11 \tab \tab }{\b\f1\uldb\cf11 DrivesCdRom}{\b\v\f1\uldb\cf11 %idDrivesCdRom}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 DrivesFixed}{\cs18\b\v\f1\uldb\cf11 %idDrivesFixed}{\b\f1\cf11 

\par }{\cs18\b\f1\uldb\cf11 DrivesRamDisk}{\cs19\b\v\f1\uldb\cf11 %idDrivesRamDisk}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 DrivesRemote}{\cs19\b\v\f1\uldb\cf11 %idDrivesRemote}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 DrivesRemovable}{
\cs19\b\v\f1\uldb\cf11 %idDrivesRemovable}{\cs18\b\f1\uldb\cf11 
\par }{\b\f1\cf11 
\par }{\i\f1\cf1 Environment properties
\par }{\cs18\b\f1\uldb\cf11 AnsiCP}{\cs19\b\v\f1\uldb\cf11 %idAnsiCP}{\b\f1\cf11 \tab \tab \tab }{\cs18\b\f1\uldb\cf11 CompName}{\cs19\b\v\f1\uldb\cf11 %idCompName}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 CurrentDrive}{\cs19\b\v\f1\uldb\cf11 
%idCurrentDrive}{\cs18\b\f1\uldb\cf11 
\par CurrentPath}{\cs19\b\v\f1\uldb\cf11 %idCurrentPath}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 KBLayout}{\cs19\b\v\f1\uldb\cf11 %idKBLayout}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 OEMCP}{\cs19\b\v\f1\uldb\cf11 %idOEMCP}{\b\f1\cf11 
\par }{\cs18\b\f1\uldb\cf11 UsrName}{\cs19\b\v\f1\uldb\cf11 %idUsrName}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 WindowsPath}{\cs19\b\v\f1\uldb\cf11 %idWindowsPath}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 WindowsSysPath}{\cs19\b\v\f1\uldb\cf11 
%idWindowsSysPath}{\b\f1\cf11 
\par }{\cs18\b\f1\uldb\cf11 WindowsTempPath}{\cs19\b\v\f1\uldb\cf11 %idWindowsTempPath}{\cs18\b\f1\uldb\cf11 
\par }{\b\f1\cf11 
\par }{\i\f1\cf1 Memory and Page file properties
\par }{\cs18\b\f1\uldb\cf11 PageFileAvail}{\cs19\b\v\f1\uldb\cf11 %idPageFileAvail}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 PageFileTotal}{\cs19\b\v\f1\uldb\cf11 %idPageFileTotal}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 PageFileUsed}{
\cs19\b\v\f1\uldb\cf11 %idPageFileUsed}{\cs18\b\f1\uldb\cf11 
\par PhysicalAvail}{\cs19\b\v\f1\uldb\cf11 %idPhysicalAvail}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 PhysicalTotal}{\cs19\b\v\f1\uldb\cf11 %idPhysicalTotal}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 PhysicalUsed}{\cs19\b\v\f1\uldb\cf11 %idPhysicalUsed}{
\b\f1\cf11 
\par }{\cs18\b\f1\uldb\cf11 VirtualAvail}{\cs19\b\v\f1\uldb\cf11 %idVirtualAvail}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 VirtualTotal}{\cs19\b\v\f1\uldb\cf11 %idVirtualTotal}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 VirtualUsed}{\cs19\b\v\f1\uldb\cf11 
%idVirtualUsed}{\b\f1\cf11 
\par 
\par }{\i\f1\cf1 Version properties
\par }{\cs18\b\f1\uldb\cf11 VerBuild}{\cs19\b\v\f1\uldb\cf11 %idVerBuild}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 VerInfoEx}{\cs19\b\v\f1\uldb\cf11 %idVerInfoEx}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 VerMajor}{\cs19\b\v\f1\uldb\cf11 %idVerMajor}{
\b\f1\cf11 
\par }{\cs18\b\f1\uldb\cf11 VerMinor}{\cs19\b\v\f1\uldb\cf11 %idVerMinor}{\b\f1\cf11 \tab \tab }{\cs18\b\f1\uldb\cf11 VerPlatformID}{\cs19\b\v\f1\uldb\cf11 %idVerPlatformID}{\b\f1\cf11 
\par \page }{\f1\cf1 
\par }}