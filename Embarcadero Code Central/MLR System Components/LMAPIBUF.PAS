unit LMAPIBUF;
{ 
Generated By: HeadConv 3.25 (c) 1998 by Bob Swart (aka Dr.Bob - www.drbob42.com)
          SPECIAL DELPHI-JEDI COMMANDLINE EDITION

Generated Date:  7/22/99
Generated Time: 5:36:01 PM
}
interface

uses
  Windows, LMCons;


{=> LMAPIBUF.H <=}

{+//++ BUILD Version: 0001 }

{-Copyright (c) 1991-1998 Microsoft Corporation }

{-Module Name: }

{-lmapibuf.h }

{-Abstract: }

{-This file contains information about NetApiBuffer APIs. }

{-Environment: }

{-User Mode - Win32 }

{-Notes: }

{-You must include LMCONS.H before this file, since this file depends }
{-on values defined in LMCONS.H. }

{=-- }

{$IFNDEF _LMAPIBUF_}
{$DEFINE _LMAPIBUF_}

{$IFDEF __cplusplus}
{$ENDIF}

{/// }
{/// Function Prototypes }
{/// }


function NetApiBufferAllocate(ByteCount: DWORD;
                              var Buffer: PByte): NET_API_STATUS cdecl  {$IFDEF WIN32} stdcall {$ENDIF};


function NetApiBufferFree(Buffer: PByte): NET_API_STATUS cdecl  {$IFDEF WIN32} stdcall {$ENDIF};


function NetApiBufferReallocate(OldBuffer: PByte;
                                NewByteCount: DWORD;
                                NewBuffer: PByte): NET_API_STATUS cdecl stdcall;


function NetApiBufferSize(Buffer: PByte;
                          ByteCount: LPDWORD): NET_API_STATUS cdecl stdcall;


{/// }
{/// The following private function will go away eventually. }
{/// Call NetApiBufferAllocate instead. }
{/// }

function NetapipBufferAllocate(ByteCount: DWORD;
                               Buffer: PByte): NET_API_STATUS cdecl stdcall;

{$IFDEF __cplusplus}
{$ENDIF}

{$ENDIF // _LMAPIBUF_}

implementation

const
  NetApi32 = 'netapi32.dll';

function NetApiBufferAllocate; external NetApi32;
function NetApiBufferFree; external NetApi32;
function NetApiBufferReallocate; external NetApi32;
function NetApiBufferSize; external NetApi32;
function NetapipBufferAllocate; external NetApi32;

end.
