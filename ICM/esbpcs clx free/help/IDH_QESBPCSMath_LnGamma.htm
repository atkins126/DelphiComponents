<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>LnGamma</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top}
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFFFF"><TR><TD><Font Color="#000000F"><B>LnGamma Function</B></Font></TD></TR></Table>Logarithm to base e of the gamma function.<P><B>Unit</B><Br><A HREF="IDH_Unit_QESBPCSMath.htm">QESBPCSMath</A><P><B>Declaration</B><Br><Font Face="Courier New"><B>Function</B> LnGamma(<B>const</B> X: Extended): Extended;</Font><P><B>Description</B><Br />Defined for all positive values of X.</P><P>Accurate to about 14 digits.</P><P>Programmer: Alan Miller - developed for Fortan 77, converted with permission.</P><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Parameters</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><Font Color="Blue">X&nbsp;</Font></TD><TD>Value to process.</TD></TR></Table></P><P><B>Category</B><Br><A HREF="idh_cat_floatmath.htm">Arithmetic Routines for Floats</A><Br /><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> LnGamma (<B>const</B> X: Extended): Extended;
<B>const</B>
     A1 = -4.166666666554424E-02;
     A2 = 2.430554511376954E-03;
     A3 = -7.685928044064347E-04;
     A4 = 5.660478426014386E-04;
<B>var</B>
     Temp, Arg, Product: Extended;
     Reflect: Boolean;
<B>begin</B>
     <Font Color="#0000DD">//  lngamma is not defined if x = 0 or a negative integer.</Font>
     <B>if</B> FloatIsZero (X) <B>or</B> (FloatIsNegative (X) <B>and</B> SameFloat (X, Int (X))) <B>then</B>
          <B>raise</B> EMathError.Create (rsNotDefinedForValue);

     <Font Color="#0000DD">// If X &lt; 0, use the reflection formula:</Font>
     <Font Color="#0000DD">//        gamma(x) * gamma(1-x) = pi * cosec(pi.x)</Font>

     Reflect := X &lt; 0.0;
     <B>if</B> Reflect <B>then</B>
          Arg := 1.0 - X
     <B>else</B>
          Arg := X;

     <Font Color="#0000DD">// Increase the argument, if necessary, to make it &gt; 10.</Font>

     Product := 1.0;
     <B>while</B> (Arg &lt;= 10.0) <B>do</B>
     <B>begin</B>
          Product := Product * Arg;
          Arg := Arg + 1.0;
     <B>end</B>;

     <Font Color="#0000DD">// Use a polynomial approximation to Stirling's formula.</Font>
     <Font Color="#0000DD">// N.B. The real Stirling's formula is used here, not the simpler, but less</Font>
     <Font Color="#0000DD">//     accurate formula given by De Moivre in a letter to Stirling, which</Font>
     <Font Color="#0000DD">//     is the one usually quoted.</Font>

     Arg := Arg - 0.5;
     Temp := 1.0 / Sqr (Arg);
     Result := LnRt2Pi + Arg * (Ln (Arg) - 1.0 +
          (((A4 * Temp + A3) * Temp + A2) * Temp + A1) * Temp) - Ln (Product);

     <B>if</B> Reflect <B>then</B>
     <B>begin</B>
          Temp := Sin (ESBPi * X);
          Result := Ln (ESBPi / Temp) - Result;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>Time2HELP</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.time2help.com">http://www.time2help.com</A></Small></Body></HTML>