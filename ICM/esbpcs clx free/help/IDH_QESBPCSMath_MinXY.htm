<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>MinXY</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top}
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFFFF"><TR><TD><Font Color="#000000F"><B>MinXY Routines</B></Font></TD></TR></Table><P><B>Unit</B><Br><A HREF="IDH_Unit_QESBPCSMath.htm">QESBPCSMath</A><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Overloaded Variants</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><A HRef="#0">Function MinXY(const X, Y: Byte): Byte;</A></TD></TR><TR Class="odd"><TD><A HRef="#1">Function MinXY(const X, Y: ShortInt): ShortInt;</A></TD></TR><TR Class="even"><TD><A HRef="#2">Function MinXY(const X, Y: Word): Word;</A></TD></TR><TR Class="odd"><TD><A HRef="#3">Function MinXY(const X, Y: SmallInt): SmallInt;</A></TD></TR><TR Class="even"><TD><A HRef="#4">Function MinXY(const X, Y: LongWord): LongWord;</A></TD></TR><TR Class="odd"><TD><A HRef="#5">Function MinXY(const X, Y: LongInt): LongInt;</A></TD></TR><TR Class="even"><TD><A HRef="#6">Function MinXY(const X, Y: Int64): Int64;</A></TD></TR><TR Class="odd"><TD><A HRef="#7">Function MinXY(const X, Y: Extended): Extended;</A></TD></TR><TR Class="even"><TD><A HRef="#8">Function MinXY(const X, Y: Double): Double;</A></TD></TR><TR Class="odd"><TD><A HRef="#9">Function MinXY(const X, Y: Single): Single;</A></TD></TR></Table></P><P><B><A Name="#0">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: Byte): Byte;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: Byte): Byte;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#1">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: ShortInt): ShortInt;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: ShortInt): ShortInt;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#2">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: Word): Word;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: Word): Word;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#3">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: SmallInt): SmallInt;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: SmallInt): SmallInt;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#4">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: LongWord): LongWord;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: LongWord): LongWord;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#5">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: LongInt): LongInt;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: LongInt): LongInt;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#6">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: Int64): Int64;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: Int64): Int64;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#7">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: Extended): Extended;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: Extended): Extended;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#8">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: Double): Double;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: Double): Double;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#9">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> MinXY(<B>const</B> X, Y: Single): Single;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> MinXY (<B>const</B> X, Y: Single): Single;
<B>begin</B>
     <B>if</B> X &lt; Y <B>then</B>
          Result := X
     <B>else</B>
          Result := Y;
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>Time2HELP</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.time2help.com">http://www.time2help.com</A></Small></Body></HTML>