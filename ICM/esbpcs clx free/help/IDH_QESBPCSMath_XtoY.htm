<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>XtoY</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top}
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFFFF"><TR><TD><Font Color="#000000F"><B>XtoY Function</B></Font></TD></TR></Table>Returns X^Y - handles all cases (except those mentioned below).<P><B>Unit</B><Br><A HREF="IDH_Unit_QESBPCSMath.htm">QESBPCSMath</A><P><B>Declaration</B><Br><Font Face="Courier New"><B>Function</B> XtoY(<B>const</B> X, Y: Extended): Extended;</Font><P><B>Description</B><Br />Zero to a Negative power raises an Exception.</P><P>If the routine can be handled with <A HREF="IDH_QESBPCSMath_ESBIntPower.htm">ESBIntPower</A> then it is used internally.</P><P>Thanks to Rory Daulton for improvements.</P><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Parameters</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><Font Color="Blue">X&nbsp;</Font></TD><TD>Value to use as Base.</TD></TR><TR Class="odd"><TD><Font Color="Blue">Y&nbsp;</Font></TD><TD>Value to use as Power.</TD></TR></Table></P><P><B>Returns</B><Br>X^Y.<P><B>Category</B><Br><A HREF="idh_cat_floatmath.htm">Arithmetic Routines for Floats</A><Br /><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> XtoY (<B>const</B> X, Y: Extended): Extended;

<B>function</B> PowerAbs: Extended; <Font Color="#0000DD">// Routine developed by Rory Daulton</Font>
     <B>var</B>
          ExponentPow2: Extended; <Font Color="#0000DD">// equivalent exponent to power 2</Font>
     <B>begin</B>
          <B>try</B>
               ExponentPow2 := ESBLog2 (Abs (X)) * Y;
          <B>except</B>
               on EMathError <B>do</B>
                    <Font Color="#0000DD">// allow underflow, when ExponentPow2 would have been negative</Font>
                    <B>if</B> (Abs (X) &gt; 1) &lt;&gt; (Y &gt; 0) <B>then</B>
                    <B>begin</B>
                         Result := 0;
                         Exit;
                    <B>end</B> <Font Color="#0000DD">{if}</Font>
                    <B>else</B>
                         <B>raise</B>;
          <B>end</B> <Font Color="#0000DD">{try}</Font>;
          Result := Pow2 (ExponentPow2);
     <B>end</B>;
<B>begin</B>
     <B>if</B> FloatIsZero (Y) <B>then</B>
          Result := 1
     <B>else</B> <B>if</B> FloatIsZero (X) <B>then</B>
     <B>begin</B>
          <B>if</B> Y &lt; 0 <B>then</B>
               <B>raise</B> EMathError.Create (rsZeroToNegPower)
          <B>else</B>
               Result := 0
     <B>end</B>
     <B>else</B> <B>if</B> FloatIsZero (Frac (Y)) <B>then</B>
     <B>begin</B>
          <B>if</B> (Y &gt;= Low (LongInt)) <B>and</B> (Y &lt;= High (LongInt)) <B>then</B>
               Result := ESBIntPower (X, LongInt (Round (Y)))
          <B>else</B>
          <B>begin</B>
               <B>if</B> (X &gt; 0) <B>or</B> FloatIsZero (Frac (Y / 2.0)) <B>then</B>
                    Result := PowerAbs
               <B>else</B>
                    Result := -PowerAbs
          <B>end</B>;
     <B>end</B>
     <B>else</B> <B>if</B> X &gt; 0 <B>then</B>
          Result := PowerAbs
     <B>else</B>
          <B>raise</B> EMathError.Create (rsInvalidXtoY)
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>Time2HELP</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.time2help.com">http://www.time2help.com</A></Small></Body></HTML>