<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>InputInt</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top}
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFFFF"><TR><TD><Font Color="#000000F"><B>InputInt Routines</B></Font></TD></TR></Table>Allows Input of an Integer in a Dialog with given Caption and Prompt.<P><B>Unit</B><Br><A HREF="IDH_Unit_QESBPCSMsgs.htm">QESBPCSMsgs</A><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Overloaded Variants</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><A HRef="#0">Function InputInt(const Caption, Prompt: string; var L: Int64): Boolean;</A></TD></TR><TR Class="odd"><TD><A HRef="#1">Function InputInt(const Caption, Prompt: string; var L: LongInt): Boolean;</A></TD></TR><TR Class="even"><TD><A HRef="#2">Function InputInt(const Caption, Prompt: string; var L: LongWord): Boolean;</A></TD></TR><TR Class="odd"><TD><A HRef="#3">Function InputInt(const Caption, Prompt: string; var L: SmallInt): Boolean;</A></TD></TR><TR Class="even"><TD><A HRef="#4">Function InputInt(const Caption, Prompt: string; var L: Word): Boolean;</A></TD></TR><TR Class="odd"><TD><A HRef="#5">Function InputInt(const Caption, Prompt: string; var L: ShortInt): Boolean;</A></TD></TR><TR Class="even"><TD><A HRef="#6">Function InputInt(const Caption, Prompt: string; var L: Byte): Boolean;</A></TD></TR></Table></P><P><B><A Name="#0">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: Int64): Boolean;</Font><P><B>Description</B><Br />If the user Cancels, then the function returns False. Invalid input is returned as 0.Ensures Default Cursor is displayed, preserves state of cursor.</P><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Parameters</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><Font Color="Blue">Caption&nbsp;</Font></TD><TD>Info to Display at the top of the Dialog.</TD></TR><TR Class="odd"><TD><Font Color="Blue">Prompt&nbsp;</Font></TD><TD>Info to Display to the left of the Input Field.</TD></TR><TR Class="even"><TD><Font Color="Blue">L&nbsp;</Font></TD><TD>Input &amp; Output Value to be displayed &amp; edited.</TD></TR></Table></P><P><B>Returns</B><Br>True if Ok is Clicked, False if Cancel is Clicked<P><B>Category</B><Br><A HREF="idh_cat_dialogs.htm">Routines that produce Dialogs</A><Br /><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: Int64): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#1">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: LongInt): Boolean;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: LongInt): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#2">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: LongWord): Boolean;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: LongWord): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#3">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: SmallInt): Boolean;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: SmallInt): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#4">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: Word): Boolean;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: Word): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#5">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: ShortInt): Boolean;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: ShortInt): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#6">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> InputInt(<B>const</B> Caption, Prompt: <B>string</B>; <B>var</B> L: Byte): Boolean;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> InputInt (<B>const</B> Caption, Prompt: <B>string</B>;
     <B>var</B> L: Byte): Boolean;
<B>var</B>
     Hold: TCursor;
     TempS: <B>string</B>;
<B>begin</B>
     Hold := Screen.Cursor;
     Screen.Cursor := crDefault;
     <B>try</B>
          <B>if</B> L &lt;&gt; 0 <B>then</B>
               TempS := Int2EStr (L)
          <B>else</B>
               TempS := <Font Color="#119911">''</Font>;
          Result := InputQuery (Caption, Prompt, TempS);
          <B>if</B> Result <B>then</B>
          <B>begin</B>
               <B>if</B> TempS &lt;&gt; <Font Color="#119911">''</Font> <B>then</B>
                    L := Str2Int (TempS)
               <B>else</B>
                    Result := False;
          <B>end</B>;
     <B>finally</B>
          Screen.Cursor := Hold;
     <B>end</B>;
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>Time2HELP</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.time2help.com">http://www.time2help.com</A></Small></Body></HTML>