<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>Str2Bits</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top}
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFFFF"><TR><TD><Font Color="#000000F"><B>Str2Bits Routines</B></Font></TD></TR></Table>Converts a string of '1' and '0' into a BitList.<P><B>Unit</B><Br><A HREF="IDH_Unit_QESBPCSSystem.htm">QESBPCSSystem</A><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Overloaded Variants</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><A HRef="#0">Function Str2Bits(var S: String16): TESBBitList;</A></TD></TR><TR Class="odd"><TD><A HRef="#1">Function Str2Bits(var S: String32): TESBLongBitList;</A></TD></TR></Table></P><P><B><A Name="#0">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> Str2Bits(<B>var</B> S: <A HREF="IDH_Type_String16.htm">String16</A>): <A HREF="IDH_Type_TESBBitList.htm">TESBBitList</A>;</Font><P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Parameters</B></Font></TD></TR></Table><Table Class="list" Width="100%" CellSpacing="1" CellPadding="2" BGColor="#EEEEEE"><TR Class="even"><TD><Font Color="Blue">S&nbsp;</Font></TD><TD>String to process.</TD></TR></Table></P><P><B>Category</B><Br><A HREF="idh_cat_memops.htm">Memory Operations</A><Br /><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> Str2Bits (<B>var</B> S: <A HREF="IDH_Type_String16.htm">String16</A>): <A HREF="IDH_Type_TESBBitList.htm">TESBBitList</A>;
<B>asm</B>
	push		esi			<Font Color="#0000DD">// Preserve ESI</Font>
	push 	ebx			<Font Color="#0000DD">// Preserve EBX</Font>

	mov		esi, eax		<Font Color="#0000DD">// Move Pointer to S ESI</Font>

	lodsb				<Font Color="#0000DD">// Read Length Byte into AL</Font>
	sub		ah, ah		<Font Color="#0000DD">// Clear AH</Font>
	mov		cx, ax		<Font Color="#0000DD">// CX &lt;- AX, CX now has the length</Font>
	sub		bx, bx		<Font Color="#0000DD">// Clear BX for BitList construction</Font>
	mov		dl, <Font Color="#119911">'0'</Font>		<Font Color="#0000DD">// For comparisons</Font>

@@Loop:
	lodsb				<Font Color="#0000DD">// Load Next Character in AL</Font>
	<B>shl</B>		bx, 1		<Font Color="#0000DD">// BX &lt;- BX * 2</Font>
	cmp		al, dl		<Font Color="#0000DD">// Is AL = '0'</Font>
	je		@@NoOne		<Font Color="#0000DD">// If Yes then it is Not a One and Jump</Font>
	add		bx, 1		<Font Color="#0000DD">// Otherwise add 1</Font>
@@NoOne:
	Loop		@@Loop		<Font Color="#0000DD">// Loop till string all processed</Font>

	mov		ax, bx		<Font Color="#0000DD">// AX &lt;- BX for function result</Font>

	pop		ebx			<Font Color="#0000DD">// Restore EBX</Font>
	pop		esi			<Font Color="#0000DD">// Restore ESI</Font>
<B>End</B>;</pre></td></tr></Table><P><B><A Name="#1">Declaration</A></B><Br><Font Face="Courier New"><B>Function</B> Str2Bits(<B>var</B> S: <A HREF="IDH_Type_String32.htm">String32</A>): <A HREF="IDH_Type_TESBLongBitList.htm">TESBLongBitList</A>;</Font><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> Str2Bits (<B>var</B> S: <A HREF="IDH_Type_String32.htm">String32</A>): <A HREF="IDH_Type_TESBLongBitList.htm">TESBLongBitList</A>;
<B>asm</B>
	push		esi			<Font Color="#0000DD">// Preserve ESI</Font>
	push 	ebx			<Font Color="#0000DD">// Preserve EBX</Font>

	mov		esi, eax		<Font Color="#0000DD">// Move Pointer to S to ESI</Font>

	lodsb				<Font Color="#0000DD">// Read Length Byte into AL</Font>
	sub		ah, ah		<Font Color="#0000DD">// Clear AH</Font>
	mov		cx, ax		<Font Color="#0000DD">// CX &lt;- AX, CX now has the length</Font>
	sub		ebx, ebx		<Font Color="#0000DD">// Clear EBX for BitList construction</Font>
	mov		dl, <Font Color="#119911">'0'</Font>		<Font Color="#0000DD">// For comparisons</Font>

@@Loop:
	lodsb				<Font Color="#0000DD">// Load Next Character in AL</Font>
	<B>shl</B>		ebx, 1		<Font Color="#0000DD">// EBX &lt;- EBX * 2</Font>
	cmp		al, dl		<Font Color="#0000DD">// Is AL = '0'</Font>
	je		@@NoOne		<Font Color="#0000DD">// If Yes then it is Not a One and Jump</Font>
	add		ebx, 1		<Font Color="#0000DD">// Otherwise add 1</Font>
@@NoOne:
	Loop		@@Loop		<Font Color="#0000DD">// Loop till string all processed</Font>

	mov		eax, ebx		<Font Color="#0000DD">// EAX &lt;- EBX for function result</Font>

	pop		ebx			<Font Color="#0000DD">// Restore EBX</Font>
	pop		esi			<Font Color="#0000DD">// Restore ESI</Font>
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>Time2HELP</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.time2help.com">http://www.time2help.com</A></Small></Body></HTML>