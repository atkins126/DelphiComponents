****************************************************************************
*                  MMC Snapin Toolkit for Delphi 5.0                       *
*                                                                          *
* Programmed by Colin Wilson                                               *
*                                                                          *
* Copyright (c) Colin Wilson 2000.  All Rights Reserved                    *
*									   *
*  Please send feedback to colin@wilsonc.demon.co.uk			   *
****************************************************************************

Installation
------------

To install the MMC Snapin toolkit:

*  Copy MMCExpert.BPL, and all the .DCU files into a directory that is specified in the Delphi 5 Library path.

*  Optionally copy the source files into a directory that is specified in the Delphi 5 Browing path.

*  Select 'Install Packages' from the 'Component' menu in Delphi 5.  Click the 'Add' button, then select MMCExpert.BPL, in the directory which you copied it to.


Creating an MMC Snapin
----------------------

*  To create an MMC snapin, select 'New...' from the File menu in Delphi 5.  Click then 'Projects' tab, and select MMCExpert.  Fill in the Experts property pages.

*  Save your newly created MMC snapin project.  Select 'Save All' from the File menu.

*  Compile and register your MMC snapin project.  See the notes on registering in the bug-list below.

*  Run your snapin from the Microsoft Management Console.

*  You can debug your snapin by making MMC.EXE the 'Host Application'.

*  You can add image lists, popup menus, new scope items and result items, etc. to your snapin by manipulating the TSnapinData component that the wizard creates for you.  You can do this at design-time or run-time.


Bugs
----

1.  Unfortunataly 'Register ActiveX Server' doesn't work with snapins generated by this snapin wizard.  To register your snapin, run RegSvr32 <yoursnapin.dll> from a command prompt.

2.  The wizard is mostly one-way.  For instance if you change the names of the data module or the snapin data component, you'll have to manually modify the wizard-generated code.

3.  If you add an ActiveX Form to your snapin project, something causes the snapin's extension to be changed to .OCX instead of .DLL.  Change it back manually.


Outstanding Features
--------------------

1.  The ViewTypeGUID Scope Item Property is useful for displaying Delphi ActiveX forms in the result pane instead of list view.  It would be much easier if you could specify the object name here, instead of the GUID!

2.  Only 'Stand Alone' snapins are supported.








