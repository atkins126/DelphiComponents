{************************************************************************************}
{                               ИСТОРИЯ                                              }
{************************************************************************************}
12.10.2007
ver 1.27 (RC3)
  + Реализован поиск в редакторе SQL для компоненты
  - Исправлена ошибка при рефреше данных
  - Исправлено отображение поле типа DateTime для Linux при компиляции с последними 
    версиями FPC
  + В параметрах компилятора для всех пакетов для Lazarus
    путь для библиотек приведён к виду 
    lib/$(TargetCPU)-$(TargetOS)
  + Большие доработки по работе внутренних буферов 
  + Новое свойство MasterScrollBehavior - указывает что далеть с редактируемым 
    подчинёным набором данных при изменении текущей записи в мастер-запросе
  - Небольшие исправления в документации
  + Новый флаг в Options poRefreshBeforeEdit 
    если установлен то перед переходом в состояние редактирования будет выполнен метод 
    Refresh
  - исправлен стиль конца строк в файлах
  + Т.к. в последних версиях FPC реализована нормальная работа вариантов и метода 
    Assign в модуле DB - при заполненни начальных данных в новую запись из мастер 
    таблицы используется стандартный метод Field.Assign
  + При установке свойства DataBase у FBDataSet происходит проверка у транзакций этого же 
    свойства если они совпадают  - то у FBDataSet транзакции не очищаются
  - Исправлена локальная сортировка в методе SortOnField
  + Добавлен файл patches.txt - здесь будет вестить учёт присланных патчей 
  + Доработана документация в части установки в Delphi
  + Добавлена новая директива компиляции для Delphi2006/BCB2006 - nomix_class_obj
12.09.2007
ver 1.26
 + Включена поддержка BigInt полей для Lazarus
 + В Lazarus отказался от поодержки полей типа TFBTimeField - используется
   стандартный TTimeField (fcl-db работает нормально)
 + В папке lazUIBEditors находится перенесённый из Delphi пакет времени 
   разработки для настройки свойств компонентов UIB - оригинальные исходники 
   взяты из uib
 - Исправлена регистрация TFBAnsiMemoField - для нормальной работы дизайнера
 - Исправлен критический баг при работе в пежиме CashedUpdates

26.08.2007
ver 1.25
 + Реализована поддержка Field.OldValues  (Lityagin, Alexandr)
 - Исправлена ошибка локальной сортировки данных (Lityagin, Alexandr)
 + Опубликованны обработчики - AfterRefresh, BeforeRefresh;
 + Для FPC - отказался от использования TFBStringField - Lazarus не умеет его 
   правильно обрабатывать.

18.07.2007
ver 1.24
 + Для Lazarus-а введено разделение на пакеты времени выполнения и проектирования,
   соответсвенно необходимо для подключения всех редакторов свойств в Lazarus 
   также устанавливать пакет dcl_fb_id_dataset.lpk
 + Реализовано сохранение положения окна SQL редактора и шрифтов данного окна
   (только Lazarus)
 - В SQL редакторе при переключении между закладками текущий редактор активизируется 
   (только Lazarus)
 + В SQL редакторе реализован поиск по тексту SQL запроса
   (только Lazarus)
 - В SQL редакторе при изменении шрифта шрифт меняется у всех редакторов, а не только
   SQLSelect (только Lazarus)
 + В SQL редакторе добавлено отображение текущей позиции курсора в тексте SQL. 
   (только Lazarus)
25.06.2007
ver 1.23
 + Доработан метод CloseOpen - перед закрытием набора делаем DisableControls, 
   после открытия - EnableControls (v-t-l)
 + Новый флаг в свойстве Options - poFillEmptyEPFromParams.
   При включенном флаге poFillEmptyEPFromParams при сохранении результа
   редактирования/добавления записи если обнаружен "потерянный" параметр 
   (параметр которому нет столбца с соответсвующим названием в выбранном 
   с помощью SQLSelect наборе данных) в SQLEdit, SQLInsert - то будет предпринята 
   попытка найти параметр с такимже именем в свойстве Params.  
 + Новый метод 
     procedure TFBDataSet.SortOnFields(FieldNames: string; Asc: array of boolean);
   сортирует локальный набор данных по нескольким полям из строки FieldNames, поля
   должны быть перечислены через запятую
   порядок сортировки задаётся массивом Asc - если в нём не хватает элементов
   или он пустой - то подразумевается прямой порядок сортировки
   (ограничение - полей не может быть более 256 в списке сортировок - если надо больше
    то меняйте констатнту MaxSortField в модуле fbmisc.pas)
 + Введено свойство TFBDataSet.RefreshTransactionKind:TTransactionKind 
   (по аналогии TpFIBDataSet из FibPlus), где 
     TTransactionKind = (tkDefault, tkReadTransaction, tkUpdateTransaction);
   Если TpFIBDataSet не имеет отдельной UpdateTransaction, то значение 
   свойства игнорируется. 

   Оно определяет, в контексте какой транзакции будет выполняться RefreshSQL. 
     tkDefault - при выполении метода Refresh буз редактирования
                 используется ReadTransaction
                 при внутреннем вызове после Post (если установлен флаг poRefreshAfterPost)
                 то используется UpdateTransaction
     tkReadTransaction - всгда используется ReadTransaction 
     tkUpdateTransaction - всгда используется UpdateTransaction
 + В SQL редакторе добавлена кнопка вставки поля из мастер-набора данных

31.05.2007
ver 1.22
 - Исправлен вызов метода Refresh для полей типа ftDate 

19.04.2007
ver 1.21
 - Исправлен вызов метода Refresh на пустом запросе 
 - небольшие фиксы ошибок и небольшая оптимизация (Lityagin, Alexandr)

03.04.2007
ver 1.20
{************************************************************************************}
{                     особые ФИЧИ (Lityagin, Alexandr)                               }
{************************************************************************************}
Автолинкуемые карты полей: введено с версии 1.20
предназначены они для скоростного доступа к полям датасета минуя стадию их поиска методом FieldByName. 
Карта, собственно, содержит связи : локальная переменная типа tField -- имя поля. Связи устанавливаются 
и обрываются методами RegisterMap, ForgetMap. Зарегистрированная переменная может находится где угодно
требования к ним одно - они не должны перемещаться с момента регистрации.
Принцип работы прост:
1) создаем необходимые переменные типа tField Зарегистрироваться они должны до того как будут использованы и обновлены, 
   а посему если ети переменные используются в методе OnCalc то зарегистрированы они должны быть после загрузки до вызова Лоадед. 
   Для етого есть новое событие BeforeInit, обработчик которого вызывается из Лоадед.
2) создаем обработчик события BeforeInit
3) регистрируем переменные полей методом RegisterMap пот соответствующими именами.
4) усе готово, сразу после регистрации и инициации полей в датасете, зарегистрированные переменные обновятся на поля 
   с указанными при регистрации именами.
Собсно сделал я ето только для того чтобы шустро работали обработчики OnCalc.


 - Исправлено удаление последней записи в режиме CashedUpdates -
   в DBGrid-е отображалась удалённая запись
 + При не активном наборе данных RecordCount вернёт 0 - раньше была ошибка доступа к 
   неактивному набору данных
 + Полностью переписана работа с BLOB 
   (Литягин Александр Владимирович  <alexrainpe196.at.newmail.ru>)
 + фича - автолинкуемые карты полей (см. выше)
25.11.2006
ver 1.19
 - Исправлена небольшая ошибка работы SQL редактора под Linux ()
 - Исправлена локальная сортировка по полям типа ftFloat
 - Исправлено редактирование мастера в мастер-детайл связке
 - исправлен метод CloneRecord
 + Введена предварительная обработка в параметрах префиксов NEW_ и OLD_
 - Исправлена ошибка рефреша полей в записи которые имели до рефреша пустые значения
 - В сортировках доработана сортировка пустых значений - теперь не перемещиваются с 
   нулевыми значениями
 - Исправлено сохранение пустого Blob
24.05.2006
ver 1.18
 + Метод     procedure CloseOpen(AFetchAll:boolean = false);
     для параметра AFetchAll введено значение по умолчанию false
 - Исправлена ошибка с отбражением полей типа Data, DateTime, Time в Lazarus-е
   (коректно отображается и под Windows и под Linux)
 - мелкие ошибки
 + обновлён пакет для BCB (Korecek Vaclav <korecek.at.rcd.cz>)
 + Реализован внутреннеий метод BookmarkValid - улчшена обработка закладок

04.04.2006
ver 1.17
 - Исправлена обработка ошибок при добавлении новой записи
 - Исправлена ошибка локальной сортировки записей в буфере набора данных 
   при пустом результате запроса
 - Исправлена ошибка отображения данных при удалении последней записи
 + Добавлена опция poFetchAll в свойство TFBDataSet.Options. 
     При включенной опции, после открытия TFBDataSet, все записи 
     автоматически закачиваются с сервера. 
12.02.2006
ver 1.16
 + Добавлено отображение в редакторе SQL описания полей
 + Добавлена фильтрация в редакторе SQL таблиц
 + Добавлена поддержка калькулируемых полей (спасибо ochnap2)
 - Исправлена ошибка потери формата полей, установленных вручную (сообщил о проблеме ochnap2)
 + Реализована поддержка AddRecord (сообщил о проблеме ochnap2)
 + Доработан редактор SQL
 - мелкие ошибки

25.01.2006
ver 1.15
 - Если набор данных закрыт, то GetActiveBuffer вернёт nil.
 - метод Locate правильно объявлен как override;
 - исправлена ошибка при открытии набора данных, если во время разработки 
   было уменьшено кол-во доступных полей.
 - исправлена ошибка генерации запроса на обновление

15.01.2006
ver 1.14
 - исправлена ошибка при DBGrid 

18.12.2005
ver 1.13
 + Добавлены 2 новых метода CloneRecord и  CloneCurRecord - копируют 
   соответсвенно указанную и текущую запись в новую
 - Исправлена ошибка при редактировании Blob
ver 1.12
23.11.2005
 - Небольшой баг фикс для совместимости между Delphi и Lazarus
 + Добавлен простой редаткор для SQLEdit, SQLRefresh, SQLInsert, SQLDelete
     (спасибо v.scozzaro 'v.scozzaro@tiscali.it')
ver 1.11
31.10.2005
 + Добавлено событие OnFetchRecord
 + Добавлено свойство FetchedRecordCount - количество реально выбранных с 
   сервера записей
 - Исправлена ошибка удаления записей в режиме кэшируемых обновлений
 + Добавлено свойство UpdateRecordTypes
 - Перед выполнением локальной сортировки происходит выфетчивание всех записей
 + В форматах по умолчанию добавлены форматы для полей Numeric и Integer
 + Для Lazarus для исправлени ошибок переопределил стандартны TFloatField

ver 1.10
15.08.2005
 - Если был не заполнен запрос на обновление, то в не зависимости от операции
   (вставка, обновление) - выдавалась ошибка
 - В режиме кэшируемых обновлений при повторном изменении только что добавленной
   записи - у записи не сохранялся статус добавленной
ver 1.9
15.08.2005
 + переименован пакет для Delphi и Lazarus
 + добавлен новый компонент - TMetaDataSQLGenerator (нужно было :-) )
 - исправлена ошибка при обновлении строковых полей
 + закрываются все FBDataSet при отключении JvUIBDataBase 
 - исправлена ошибка при работе с закладками после переоткрытия набора данных
 + добавлена иконка для TFBDataSet
 + добавлен пакет для BCB (спасибо - Koreшek Vсclav <korecek@rcd.cz>)
 + исправлена проблема Lazarus-а при работе с мемо-полями (не отображалось в LazReporte)
 + и бругие исправления ошибок....

ver 1.8
11.03.2005
 - исправлена ошибка при работе со строковыми полями
 - исправлена ошибка при сохранении пустых значений
 + добавлен простой пример работы с компонетой для FPC и для Delphi

ver 1.7
06.03.2005
 + добавлена полная поддержка blob и мемо полей - не работает в режиме
   кэшируемых обновлений

ver 1.6 
05.03.2005
 + компилируется с помощью Free Pascal Compiler version 1.9.8 [2005/02/25],
   Lazarus версии 0.9.6
 + добавлена поддержка blob и мемо полей - пока в режиме только на чтение
ver 1.5
01.02.2005
 - в файле fb_define.inc добавил дерективу компиляции для замены SQL редактора на 
   стандартный StringsEditor
 + добавил метод Locate (реализация из RX) (не реботает в Lazarus - не знаю почему
   что-то с вариантами)
22.01.2005
 - исправлена ошибка в SQL редакторе при отображении наименований полей
 + В Lazarus переисал редатктор SQL запроса
12.01.2005
 + В Lazarus подменил стандартный TStringField  на TFBStringFiled - 
   TStringField не разрешает вводить символы с кодом больше > #155 (bug in Lazarus?)
07.01.2005
 - Исправлена ошибка в FetchAll при пустом результирующем наборе
ver 1.4
04.01.2005
 - Не использую больше jvuib.inc (Lazarus не позволяет коректно ссылаться на 
   него).
 + Упорядочены пути к получаемым библиотекам (thanks jesusr).
 + После установки пакета в Lazarus у всех компонент со свойством FieldName 
   появляется редактор как в Delphi.

02.01.2005
 - bug fix on edit,diplay TIMESTAMP field
 - bug fix on SQLs Editor in Lazarus - after change active tab 
   SQLEditor not activated
 - bug fix on edit,diplay DATE field
 - bug fix on edit,diplay TIME field
 + Add property - DefaultFormats
 - bug fix on open stored dataset with Active=true 

ver 1.3
31.12.2004
 + новое свойство - Description - описание компонента
 + добавлена поддержка локальной фильтрации (основано на событии OnFilterRecord) 
 + добавлено кэширование обновлений

версия 1.2
24.12.2004
 + новое свойство - UpdateTransaction
 + новое свойство - AutoCommit
 + свойство AllowedUpdateKinds полностью функционирует
 - исправлена ошибка при добавлении новой записи на пустом наборе данных
 - исправлена ошибка позиционирования текущей записи в изменяемом запросе
   при автоматическом обновлени мастер-запроса

p.s. в Lazarus свойство UpdateTransaction не отображается 
  в инспекторе объектов - ошибка в Lazarus?


21.12.2004
 + Добавлены макросы в SQL запрос (основано на RxQuery из RxLib)

версия 1.1
19.12.2004
 + Добавлено свойство SQLInsert 
 + Добавлена поддержка добавления новой записи в подчинённом (detail) запросе
   с копированием в поле, по которому происходит связка данных из мастер-запроса
 + Добавлена поддержка автогенерации значений через генераторы (новое значение генератора
   вытаскивается на клиента и устанавливается в записи)
 + Исправлены ошибки при обновлении (refresh) данных
 + Добавлена поддержка обновления (refresh) данных местер-запроса при 
   изменении подчинённого запроса (insert/edit/delete)
17.12.2004
 + Добавлен SQL редактор (Lazarus)
16.12.2004
 + добавлены новые методы: FetchAll, FetchNext(FCount), CloseOpen
 + Добавлена поддержка Master-Detail маханизма
 + Добавлен SQL редактор (Delphi)
15.12.2004
 + Добавлена сортировка в локальном буфере (без переоткрытия запроса)
 + добавлен интерфейс к компоненте DbGridEh из EhLib

версия 1.0
14.12.2004 - Первый набросок
 